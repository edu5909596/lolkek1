name: Build xdelta3

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build (${{ matrix.os }}-${{ matrix.arch }})
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          # Linux
          - os: linux
            runner: ubuntu-latest
            arch: x86_64
          # macOS x86_64
          - os: macos
            runner: macos-13
            arch: x86_64
          # macOS arm64
          - os: macos
            runner: macos-latest
            arch: arm64
          # Windows
          - os: windows
            runner: windows-latest
            arch: x86_64

    steps:
      - name: Clone xdelta
        run: |
          git clone https://github.com/jmacd/xdelta.git
          cd xdelta
          git submodule update --init --recursive

      - name: Install dependencies (Linux)
        if: matrix.os == 'linux'
        run: sudo apt-get update && sudo apt-get install -y build-essential

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos'
        run: brew install make

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows'
        run: |
          choco install make --yes
          choco install mingw --yes

      - name: Build
        working-directory: ./xdelta/xdelta3
        run: make -j$(nproc || sysctl -n hw.ncpu || echo 2)

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: xdelta3-${{ matrix.os }}-${{ matrix.arch }}
          path: ./xdelta/xdelta3/xdelta3
